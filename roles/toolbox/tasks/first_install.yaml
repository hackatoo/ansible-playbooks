---
- hosts: all
  vars_files:
    - ~/ansible/ansible-main/roles/toolbox/vars/aws.yaml

  vars_prompt:
    - name: domain
      prompt: 'Domain name (Example: amsh1.toolbox-web.com)'
      private: false

    - name: company
      prompt: 'Company name (Example: amsh1)'
      private: false

  tasks: 
    - name: 
      debug:
          msg: 
            - "Check the links below:"
            - '"{{ TBfront }}" Frontend'
            -  '"{{ TBback }}" Backend"'
            - '"{{ dotnet }}" Dotnet'
            
    - name: Confirm the actuality of TB download links
      pause:
        prompt: "Are you checked the actuall links? (yes/no)"
      register: confirm_delete

    - name: Set the PATH Toolbox variable
      set_fact:
            tb_dir: 'C:\T4B\ToolBox_"{{ company }}"'

    - name: Install Web-Serverimplicit 
      ansible.windows.win_feature:
        name: Web-Server
        state: present  
        include_management_tools: yes

    - name: Install other Components
      ansible.windows.win_feature:
        name: 
          - Web-Scripting-Tools
          - Web-Mgmt-Service
          - Web-Net-Ext
          - Web-Net-Ext45
          - Web-Asp
          - Web-Asp-Net
          - Web-Asp-Net45
          - Web-ISAPI-Filter
          - Web-ISAPI-Ext
          - Web-WebSockets
          - Web-WHC
          - Web-Metabase
          - Web-Lgcy-Scripting
          - Web-WMI
        state: present  

    - name: Get dotnet zip archive 
      win_get_url: 
        url: '{{ dotnet }}'
        dest: '{{ tb_dir }}\dotnet.zip'

    - name: Unzip dotnet installer 
      win_unzip: 
        src: '{{ tb_dir }}\dotnet.zip'
        dest: '{{ tb_dir }}\dist\'
        recurse: yes
        delete_archive: yes

    - name: Install dotnet
      win_shell:  |
          Start-Process -Wait -FilePath "$dirtb\dist\dotnet-hosting-6.0.12-win.exe" -ArgumentList "/S /passive /norestart" -PassThru

    - name: Get Frontend TB zip archive 
      win_get_url: 
        url: '{{ TBFront }}'
        dest: '{{ tb_dir }}\dist\TBFront.zip'
    
    - name: Get Frontend TB zip archive 
      win_get_url: 
        url: '{{ TBBack }}'
        dest: '{{ tb_dir }}\dist\TBBack.zip'

    - name: Unarchive Toolbox Backend
      win_unzip: 
        src: '{{ tb_dir }}\TBBack.zip'
        dest: '{{ tb_dir }}\actual\'
        recurse: yes
        delete_archive: yes

    - name: Unarchive Toolbox Frontend
      win_unzip: 
        src: '{{ tb_dir }}\TBFront.zip'
        dest: '{{ tb_dir }}\actual\ClientApp\build'
        recurse: yes
        delete_archive: yes
        
    - name: Install url rewrite and chocolatey
      win_chocolatey:
        name: 
          - win-acme
          - urlrewrite
        state: latest 

    - name: Adding Route 53 A Record  
      route53:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        state: present
        zone: toolbox-web.com
        record: "{{ domain }}"
        type: A
        ttl: 300
        value: "{{ ansible.host }}"
        wait: yes
      register: result
      delegate_to: localhost

    - name: PS script to configure WinRM Certificate Authentication
      ansible.windows.win_powershell:
        script: |
            Import-Module WebAdministration
            Remove-WebSIte -name 'Default Web Site' -confirm:$False
            New-Item IIS:\AppPools\TB_$nameofcompany
            Set-ItemProperty IIS:\AppPools\TB_$nameofcompany -Name "managedRuntimeVersion" -Value ""
            Set-ItemProperty IIS:\AppPools\TB_$nameofcompany -Name processModel.idleTimeout -Value "0"
            Set-ItemProperty IIS:\AppPools\TB_$nameofcompany -Name processModel.loadUserProfile -Value "True"
            Set-ItemProperty IIS:\AppPools\TB_$nameofcompany -Name Recycling.periodicRestart.time -Value 0.00:00:00
            New-NetFirewallRule -DisplayName "Port for work ToolBox 443" -Direction Inbound -LocalPort "443" -Protocol TCP -Action Allow
            New-WebSite -Name "TB_$nameofcompany" -PhysicalPath "$dirtb\actual" -Port 80 -ApplicationPool "TB_$nameofcompany" -HostHeader $dns
            wacs.exe --source iis --siteid 1 --validation selfhosting --order single --csr rsa  --certificatestore My --pfxpassword jkdjkf6Yhf8 --installation iis --installationsiteid 1 --sslport 443 --accepttos --emailaddress 1 --force
            IISReset /restart
        parameters:
          nameofcompany: "{{ company }}"
          dirtb: "{{ tb_dir }}"
          dns: "{{ domain }}"